overwrite: true
schema: './graphql/schema.graphql'
documents: '**/*.gql'
generates:
  graphql/generated/frontend.ts:
    plugins:
      - add: '/* eslint-disable */'
      - 'typescript'
      - 'typescript-operations'
      - 'typescript-react-apollo'
    config:
      withHOC: false
      withComponent: false
      withHooks: true
      withMutationFn: false
      gqlImport: apollo-boost#gql
      scalars:
        DateTime: string
  graphql/generated/backend.ts:
    plugins:
      - add: '/* eslint-disable */'
      - 'typescript'
      - 'typescript-resolvers'
      - ./utils/graphql-codegen-plugins/plugin-type-def.js
    config:
      contextType: ../context#Context
      useIndexSignature: true
      mappers:
        Subject: ../Subject/SubjectSchema#SubjectDocument
        Dispute: ../Dispute/DisputeSchema#DisputeDocument
        Message: ../Message/MessageSchema#MessageDocument
        NewDisputeNotification: ../Notification/NotificationSchema#NewDisputeNotificationDocument
        NewMessageNotification: ../Notification/NotificationSchema#NewMessageNotificationDocument
        NotificationsUpdate: ../Notification/NotificationsUpdateMapper#NotificationsUpdateMapper
        User: ../User#UserMapper
      scalars:
        DateTime: string
      wrapFieldDefinitions: true
      fieldWrapperValue: T | Promise<T> | (() => T | Promise<T>)
  graphql/generated/introspection.ts:
    plugins:
      - fragment-matcher
    config:
      apolloClientVersion: 2
hooks:
  afterOneFileWrite:
    - prettier --write
