# import Dispute from '../Dispute/Dispute.graphql'
# import Message from '../Message/Message.graphql'
# import PageInfo from '../PageInfo/PageInfo.graphql'

type NotificationStatus {
  totalCountUnread: Int!
}

type NotificationConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [NotificationEdge!]!
}

type NotificationEdge {
  cursor: String!
  node: Notification!
}

type NotificationsUpdate {
  updatedNotification: [Notification!]!
  notificationStatus: NotificationStatus! @auth
}

interface Notification {
  id: ID!
  read: Boolean!
  createdAt: DateTime!
}

type NewDisputeNotification implements Notification {
  id: ID!
  read: Boolean!
  createdAt: DateTime!

  dispute: Dispute!
}

type NewMessageNotification implements Notification {
  id: ID!
  read: Boolean!
  createdAt: DateTime!

  message: Message!
}
